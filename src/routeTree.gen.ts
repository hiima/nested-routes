/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as usersUsersRouteImport } from './routes/(users)/users/route'
import { Route as usersUsersUserIdEditIndexImport } from './routes/(users)/users/$userId/edit/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const usersUsersRouteRoute = usersUsersRouteImport.update({
  id: '/(users)/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const usersUsersUserIdEditIndexRoute = usersUsersUserIdEditIndexImport.update({
  id: '/$userId/edit/',
  path: '/$userId/edit/',
  getParentRoute: () => usersUsersRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/(users)/users': {
      id: '/(users)/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof usersUsersRouteImport
      parentRoute: typeof rootRoute
    }
    '/(users)/users/$userId/edit/': {
      id: '/(users)/users/$userId/edit/'
      path: '/$userId/edit'
      fullPath: '/users/$userId/edit'
      preLoaderRoute: typeof usersUsersUserIdEditIndexImport
      parentRoute: typeof usersUsersRouteImport
    }
  }
}

// Create and export the route tree

interface usersUsersRouteRouteChildren {
  usersUsersUserIdEditIndexRoute: typeof usersUsersUserIdEditIndexRoute
}

const usersUsersRouteRouteChildren: usersUsersRouteRouteChildren = {
  usersUsersUserIdEditIndexRoute: usersUsersUserIdEditIndexRoute,
}

const usersUsersRouteRouteWithChildren = usersUsersRouteRoute._addFileChildren(
  usersUsersRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/users': typeof usersUsersRouteRouteWithChildren
  '/users/$userId/edit': typeof usersUsersUserIdEditIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/users': typeof usersUsersRouteRouteWithChildren
  '/users/$userId/edit': typeof usersUsersUserIdEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/(users)/users': typeof usersUsersRouteRouteWithChildren
  '/(users)/users/$userId/edit/': typeof usersUsersUserIdEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/users' | '/users/$userId/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/users' | '/users/$userId/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/(users)/users'
    | '/(users)/users/$userId/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  usersUsersRouteRoute: typeof usersUsersRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  usersUsersRouteRoute: usersUsersRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/(users)/users"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/(users)/users": {
      "filePath": "(users)/users/route.tsx",
      "children": [
        "/(users)/users/$userId/edit/"
      ]
    },
    "/(users)/users/$userId/edit/": {
      "filePath": "(users)/users/$userId/edit/index.tsx",
      "parent": "/(users)/users"
    }
  }
}
ROUTE_MANIFEST_END */
